# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#

version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: amazonlinux

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: install system packages
          command: |
            yum install -y gcc libffi-devel openssl-devel python27-virtualenv

      - run:
          name: install nvm node and serverless
          command: |
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash
            . ~/.nvm/nvm.sh
            nvm install 6.11.5
            node -e "console.log('Running Node.js ' + process.version)"
            npm install serverless -g

      - run:
          name: install application dependencies
          command: |
            virtualenv /tmp/venv
            . /tmp/venv/bin/activate
            pip install -r requirements.txt

      - run:
          name: copy to vendored directory
          command: |
            cp -r /tmp/venv/lib/python2.7/site-packages/. ./vendored
            cp -r /tmp/venv/lib64/python2.7/site-packages/. ./vendored

      - save_cache:
          paths:
            - /tmp/venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}


      # run tests!
      - run:
          name: run tests
          command: |
            . /tmp/venv/bin/activate
            python tests.py

      - store_artifacts:
          path: test-reports
          destination: test-reports

  deploy:
    docker:
        - image: amazonlinux
    working_directory: ~/repo
    steps:
      - checkout

      - run:
          name: Show some files
          command: pwd && ls -la

      - run:
          name: Show the vendored directory
          command: |  # this command is framework-dependent and may vary
            ls -la ./vendored

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master