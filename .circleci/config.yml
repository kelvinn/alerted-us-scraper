# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#

version: 2
jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: amazonlinux
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install system packages
          command: |
            yum install -y gcc libffi-devel openssl-devel python27-virtualenv

      - run:
          name: Install nvm node and serverless
          command: |
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash
            . ~/.nvm/nvm.sh
            nvm install 6.11.5
            node -e "console.log('Running Node.js ' + process.version)"
            npm install serverless -g

      - run:
          name: Install application dependencies
          command: |
            mkdir /tmp/workspace
            virtualenv /tmp/workspace/venv
            . /tmp/workspace/venv/bin/activate
            pip install -r requirements.txt

      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - venv

      - save_cache:
          paths:
            - /tmp/workspace/venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

  test:
    working_directory: ~/repo
    docker:
      - image: amazonlinux
    steps:
      - checkout

      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace

      - run:
          name: Run tests
          command: |
            . /tmp/workspace/venv/bin/activate
            python tests.py

      - store_artifacts:
          path: test-reports
          destination: test-reports

  deploy:
    working_directory: ~/repo
    docker:
      - image: amazonlinux
    steps:
      - checkout

      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace

      - run:
          name: Copy to vendored directory
          command: |
            cp -r /tmp/workspace/venv/lib/python2.7/site-packages/. ./vendored
            cp -r /tmp/workspace/venv/lib64/python2.7/site-packages/. ./vendored

      - run:
          name: Upload to Serverless
          command: |
            serverless deploy

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test